{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm09 } from '../../type/matrix/utils/algorithm09.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nexport var createAtan2 = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = createAlgorithm02({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm09 = createAlgorithm09({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","map":{"version":3,"names":["factory","createAlgorithm02","createAlgorithm03","createAlgorithm09","createAlgorithm11","createAlgorithm12","createAlgorithm13","createAlgorithm14","name","dependencies","createAtan2","_ref","typed","matrix","equalScalar","BigNumber","DenseMatrix","algorithm02","algorithm03","algorithm09","algorithm11","algorithm12","algorithm13","algorithm14","Math","atan2","BigNumberBigNumber","y","x","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixNumberBigNumber","DenseMatrixNumberBigNumber","numberBigNumberSparseMatrix","numberBigNumberDenseMatrix","ArrayNumberBigNumber","numberBigNumberArray"],"sources":["/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/node_modules/mathjs/lib/esm/function/trigonometry/atan2.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { createAlgorithm02 } from '../../type/matrix/utils/algorithm02.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm09 } from '../../type/matrix/utils/algorithm09.js';\nimport { createAlgorithm11 } from '../../type/matrix/utils/algorithm11.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nexport var createAtan2 = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = createAlgorithm02({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm09 = createAlgorithm09({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = createAlgorithm11({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}