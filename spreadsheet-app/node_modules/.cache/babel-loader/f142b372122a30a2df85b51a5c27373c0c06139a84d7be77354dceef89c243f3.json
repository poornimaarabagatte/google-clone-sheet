{"ast":null,"code":"var _jsxFileName = \"/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/src/components/spreadSheet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { evaluate } from \"mathjs\";\nimport { FaBold, FaItalic, FaFont, FaTrash, FaPlus, FaMinus, FaTable, FaSortNumericDown, FaArrowUp, FaArrowDown, FaCut, FaSearch, FaEllipsisH, FaCalculator, FaPlusCircle, FaMinusCircle, FaChartBar, FaHashtag, FaSave, FaFolderOpen, FaTextHeight, FaTextWidth, FaSortAmountDown, FaSortAmountUp, FaHashtag as FaCount, FaEdit, FaRegCheckSquare, FaArrowCircleUp, FaArrowCircleDown, FaEraser, FaSyncAlt } from \"react-icons/fa\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./spreadSheet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spreadsheet = () => {\n  _s();\n  const [cells, setCells] = useState(Array(10).fill(null).map(() => Array(10).fill(\"\")));\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [formula, setFormula] = useState(\"\");\n  const [isFormulaMode, setIsFormulaMode] = useState(false);\n  const [findValue, setFindValue] = useState(\"\");\n  const [replaceValue, setReplaceValue] = useState(\"\");\n  const handleCellChange = (row, col, value) => {\n    const newCells = cells.map((r, i) => r.map((c, j) => i === row && j === col ? value : c));\n    setCells(newCells);\n  };\n  const applyFormula = () => {\n    try {\n      const result = evaluate(formula);\n      if (selectedCells.length) {\n        const [targetRow, targetCol] = selectedCells[0];\n        const newCells = [...cells];\n        newCells[targetRow][targetCol] = result.toString();\n        setCells(newCells);\n      }\n    } catch (error) {\n      alert(\"Invalid formula\");\n    }\n  };\n  const generateChartData = () => {\n    let dataValues = selectedCells.map(([row, col]) => parseFloat(cells[row][col]) || 0);\n    return {\n      labels: selectedCells.map(([row, col]) => `${String.fromCharCode(65 + col)}${row + 1}`),\n      datasets: [{\n        label: \"Selected Data\",\n        data: dataValues,\n        backgroundColor: \"rgba(75,192,192,0.6)\"\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spreadsheet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      style: {\n        display: 'flex',\n        gap: '10px',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Formula\",\n        value: formula,\n        onChange: e => setFormula(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyFormula,\n        children: [/*#__PURE__*/_jsxDEV(FaCalculator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 48\n        }, this), \" Apply Formula\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"Chart coming soon!\"),\n        children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 69\n        }, this), \" Generate Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), cells[0].map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(65 + colIndex)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cells.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: rowIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => setSelectedCells([[rowIndex, colIndex]]),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: cell,\n              onChange: e => handleCellChange(rowIndex, colIndex, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this))]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: generateChartData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Spreadsheet, \"lsI1optduCBdZkD/J5eEve/SlGM=\");\n_c = Spreadsheet;\nexport default Spreadsheet;\nvar _c;\n$RefreshReg$(_c, \"Spreadsheet\");","map":{"version":3,"names":["React","useState","evaluate","FaBold","FaItalic","FaFont","FaTrash","FaPlus","FaMinus","FaTable","FaSortNumericDown","FaArrowUp","FaArrowDown","FaCut","FaSearch","FaEllipsisH","FaCalculator","FaPlusCircle","FaMinusCircle","FaChartBar","FaHashtag","FaSave","FaFolderOpen","FaTextHeight","FaTextWidth","FaSortAmountDown","FaSortAmountUp","FaCount","FaEdit","FaRegCheckSquare","FaArrowCircleUp","FaArrowCircleDown","FaEraser","FaSyncAlt","Bar","jsxDEV","_jsxDEV","Spreadsheet","_s","cells","setCells","Array","fill","map","selectedCells","setSelectedCells","formula","setFormula","isFormulaMode","setIsFormulaMode","findValue","setFindValue","replaceValue","setReplaceValue","handleCellChange","row","col","value","newCells","r","i","c","j","applyFormula","result","length","targetRow","targetCol","toString","error","alert","generateChartData","dataValues","parseFloat","labels","String","fromCharCode","datasets","label","data","backgroundColor","className","children","style","display","gap","flexWrap","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_","colIndex","rowIndex","cell","width","marginTop","_c","$RefreshReg$"],"sources":["/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/src/components/spreadSheet.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { evaluate } from \"mathjs\";\nimport { FaBold, FaItalic, FaFont, FaTrash, FaPlus, FaMinus, FaTable, FaSortNumericDown, FaArrowUp, FaArrowDown, FaCut, FaSearch, FaEllipsisH, FaCalculator, FaPlusCircle, FaMinusCircle, FaChartBar, FaHashtag, FaSave, FaFolderOpen, FaTextHeight, FaTextWidth, FaSortAmountDown, FaSortAmountUp, FaHashtag as FaCount, FaEdit, FaRegCheckSquare, FaArrowCircleUp, FaArrowCircleDown, FaEraser, FaSyncAlt } from \"react-icons/fa\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./spreadSheet.css\"\n\nconst Spreadsheet = () => {\n    const [cells, setCells] = useState(Array(10).fill(null).map(() => Array(10).fill(\"\")));\n    const [selectedCells, setSelectedCells] = useState([]);\n    const [formula, setFormula] = useState(\"\");\n    const [isFormulaMode, setIsFormulaMode] = useState(false);\n    const [findValue, setFindValue] = useState(\"\");\n    const [replaceValue, setReplaceValue] = useState(\"\");\n    \n    const handleCellChange = (row, col, value) => {\n        const newCells = cells.map((r, i) => r.map((c, j) => (i === row && j === col ? value : c)));\n        setCells(newCells);\n    };\n\n    const applyFormula = () => {\n        try {\n            const result = evaluate(formula);\n            if (selectedCells.length) {\n                const [targetRow, targetCol] = selectedCells[0];\n                const newCells = [...cells];\n                newCells[targetRow][targetCol] = result.toString();\n                setCells(newCells);\n            }\n        } catch (error) {\n            alert(\"Invalid formula\");\n        }\n    };\n\n    const generateChartData = () => {\n        let dataValues = selectedCells.map(([row, col]) => parseFloat(cells[row][col]) || 0);\n        return {\n            labels: selectedCells.map(([row, col]) => `${String.fromCharCode(65 + col)}${row + 1}`),\n            datasets: [{\n                label: \"Selected Data\",\n                data: dataValues,\n                backgroundColor: \"rgba(75,192,192,0.6)\",\n            }]\n        };\n    };\n\n    return (\n        <div className=\"spreadsheet\">\n            <div className=\"toolbar\" style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n                <input type=\"text\" placeholder=\"Enter Formula\" value={formula} onChange={(e) => setFormula(e.target.value)} />\n                <button onClick={applyFormula}><FaCalculator /> Apply Formula</button>\n                <button onClick={() => alert(\"Chart coming soon!\")}><FaChartBar /> Generate Chart</button>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th></th>\n                        {cells[0].map((_, colIndex) => (\n                            <th key={colIndex}>{String.fromCharCode(65 + colIndex)}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {cells.map((row, rowIndex) => (\n                        <tr key={rowIndex}>\n                            <th>{rowIndex + 1}</th>\n                            {row.map((cell, colIndex) => (\n                                <td key={colIndex} onClick={() => setSelectedCells([[rowIndex, colIndex]])}>\n                                    <input\n                                        value={cell}\n                                        onChange={(e) => handleCellChange(rowIndex, colIndex, e.target.value)}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div style={{ width: \"50%\", marginTop: \"20px\" }}>\n                <Bar data={generateChartData()} />\n            </div>\n        </div>\n    );\n};\n\nexport default Spreadsheet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}