{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { typeOf } from '../../utils/is.js';\nvar name = 'divideScalar';\nvar dependencies = ['typed', 'numeric'];\nexport var createDivideScalar = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    numeric\n  } = _ref;\n\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x / y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.div(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.div(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.div(y);\n    },\n    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {\n      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(y));\n      res.value = this(res.value === null ? res._normalize(one) : res.value, y);\n      return res;\n    },\n    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {\n      var res = y.clone();\n      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(x));\n      res.value = this(x, y.value === null ? y._normalize(one) : y.value);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.divide(y);\n    }\n  });\n});","map":{"version":3,"names":["factory","typeOf","name","dependencies","createDivideScalar","_ref","typed","numeric","numberNumber","x","y","ComplexComplex","div","BigNumberBigNumber","FractionFraction","UnitNumberFractionBigNumber","res","clone","one","value","_normalize","numberFractionBigNumberUnit","pow","UnitUnit","divide"],"sources":["/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { typeOf } from '../../utils/is.js';\nvar name = 'divideScalar';\nvar dependencies = ['typed', 'numeric'];\nexport var createDivideScalar = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    numeric\n  } = _ref;\n\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x / y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.div(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.div(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.div(y);\n    },\n    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {\n      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(y));\n      res.value = this(res.value === null ? res._normalize(one) : res.value, y);\n      return res;\n    },\n    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {\n      var res = y.clone();\n      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, typeOf(x));\n      res.value = this(x, y.value === null ? y._normalize(one) : y.value);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.divide(y);\n    }\n  });\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,IAAIC,IAAI,GAAG,cAAc;AACzB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC;AACvC,OAAO,IAAIC,kBAAkB,GAAG,eAAeJ,OAAO,CAACE,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACjF,IAAI;IACFC,KAAK;IACLC;EACF,CAAC,GAAGF,IAAI;;EAER;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjB,gBAAgB,EAAE,SAASM,YAAYA,CAACC,CAAC,EAAEC,CAAC,EAAE;MAC5C,OAAOD,CAAC,GAAGC,CAAC;IACd,CAAC;IACD,kBAAkB,EAAE,SAASC,cAAcA,CAACF,CAAC,EAAEC,CAAC,EAAE;MAChD,OAAOD,CAAC,CAACG,GAAG,CAACF,CAAC,CAAC;IACjB,CAAC;IACD,sBAAsB,EAAE,SAASG,kBAAkBA,CAACJ,CAAC,EAAEC,CAAC,EAAE;MACxD,OAAOD,CAAC,CAACG,GAAG,CAACF,CAAC,CAAC;IACjB,CAAC;IACD,oBAAoB,EAAE,SAASI,gBAAgBA,CAACL,CAAC,EAAEC,CAAC,EAAE;MACpD,OAAOD,CAAC,CAACG,GAAG,CAACF,CAAC,CAAC;IACjB,CAAC;IACD,qCAAqC,EAAE,SAASK,2BAA2BA,CAACN,CAAC,EAAEC,CAAC,EAAE;MAChF,IAAIM,GAAG,GAAGP,CAAC,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC;;MAErB,IAAIC,GAAG,GAAGX,OAAO,CAAC,CAAC,EAAEN,MAAM,CAACS,CAAC,CAAC,CAAC;MAC/BM,GAAG,CAACG,KAAK,GAAG,IAAI,CAACH,GAAG,CAACG,KAAK,KAAK,IAAI,GAAGH,GAAG,CAACI,UAAU,CAACF,GAAG,CAAC,GAAGF,GAAG,CAACG,KAAK,EAAET,CAAC,CAAC;MACzE,OAAOM,GAAG;IACZ,CAAC;IACD,qCAAqC,EAAE,SAASK,2BAA2BA,CAACZ,CAAC,EAAEC,CAAC,EAAE;MAChF,IAAIM,GAAG,GAAGN,CAAC,CAACO,KAAK,CAAC,CAAC;MACnBD,GAAG,GAAGA,GAAG,CAACM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEnB,IAAIJ,GAAG,GAAGX,OAAO,CAAC,CAAC,EAAEN,MAAM,CAACQ,CAAC,CAAC,CAAC;MAC/BO,GAAG,CAACG,KAAK,GAAG,IAAI,CAACV,CAAC,EAAEC,CAAC,CAACS,KAAK,KAAK,IAAI,GAAGT,CAAC,CAACU,UAAU,CAACF,GAAG,CAAC,GAAGR,CAAC,CAACS,KAAK,CAAC;MACnE,OAAOH,GAAG;IACZ,CAAC;IACD,YAAY,EAAE,SAASO,QAAQA,CAACd,CAAC,EAAEC,CAAC,EAAE;MACpC,OAAOD,CAAC,CAACe,MAAM,CAACd,CAAC,CAAC;IACpB;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}