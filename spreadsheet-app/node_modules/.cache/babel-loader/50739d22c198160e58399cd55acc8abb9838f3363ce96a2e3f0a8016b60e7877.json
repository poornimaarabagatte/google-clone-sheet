{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'equal';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createEqual = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n      if (y === null) {\n        return x === null;\n      }\n      if (x === undefined) {\n        return y === undefined;\n      }\n      if (y === undefined) {\n        return x === undefined;\n      }\n      return equalScalar(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, equalScalar);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, equalScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, equalScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, equalScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, equalScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, equalScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, equalScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, equalScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf();\n    }\n  });\n});\nexport var createEqualNumber = factory(name, ['typed', 'equalScalar'], _ref2 => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n      if (y === null) {\n        return x === null;\n      }\n      if (x === undefined) {\n        return y === undefined;\n      }\n      if (y === undefined) {\n        return x === undefined;\n      }\n      return equalScalar(x, y);\n    }\n  });\n});","map":{"version":3,"names":["factory","createAlgorithm03","createAlgorithm07","createAlgorithm12","createAlgorithm13","createAlgorithm14","name","dependencies","createEqual","_ref","typed","matrix","equalScalar","DenseMatrix","algorithm03","algorithm07","algorithm12","algorithm13","algorithm14","anyAny","x","y","undefined","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray","createEqualNumber","_ref2"],"sources":["/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/node_modules/mathjs/lib/esm/function/relational/equal.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'equal';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nexport var createEqual = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, equalScalar);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, equalScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, equalScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, equalScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, equalScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, equalScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, equalScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, equalScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf();\n    }\n  });\n});\nexport var createEqualNumber = factory(name, ['typed', 'equalScalar'], _ref2 => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    }\n  });\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}