{"ast":null,"code":"import { isCollection, isMatrix } from './is.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { arraySize } from './array.js';\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\n\nexport function containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\n\nexport function deepForEach(array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf();\n  }\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nexport function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\n\nexport function reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? arraySize(mat) : mat.size();\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length);\n  }\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n      return ret;\n    }\n  } else {\n    ret = [];\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n    ret.push(tmp);\n  }\n  return ret;\n} // TODO: document function scatter\n\nexport function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr; // vars\n\n  var k, k0, k1, i; // check we need to process values (pattern matrix)\n\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i); // x(i) = A, check we need to call function this time\n\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row\n\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row\n\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}","map":{"version":3,"names":["isCollection","isMatrix","IndexError","arraySize","containsCollections","array","i","length","deepForEach","callback","valueOf","ii","value","Array","isArray","deepMap","skipZeros","map","x","reduce","mat","dim","size","create","_reduce","ret","val","tran","_switch","I","J","j","tmp","push","scatter","a","w","u","mark","cindex","f","inverse","update","avalues","_values","aindex","_index","aptr","_ptr","k","k0","k1"],"sources":["/Users/poornima/Desktop/Google_Sheet/spreadsheet-app/node_modules/mathjs/lib/esm/utils/collection.js"],"sourcesContent":["import { isCollection, isMatrix } from './is.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { arraySize } from './array.js';\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\n\nexport function containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\n\nexport function deepForEach(array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf();\n  }\n\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nexport function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\n\nexport function reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? arraySize(mat) : mat.size();\n\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length);\n  }\n\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n\n      return ret;\n    }\n  } else {\n    ret = [];\n\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n\n    ret.push(tmp);\n  }\n\n  return ret;\n} // TODO: document function scatter\n\n\nexport function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr; // vars\n\n  var k, k0, k1, i; // check we need to process values (pattern matrix)\n\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i); // x(i) = A, check we need to call function this time\n\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row\n\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row\n\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}